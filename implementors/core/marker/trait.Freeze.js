(function() {var implementors = {};
implementors["tower"] = [{"text":"impl Freeze for Discover","synthetic":true,"types":[]},{"text":"impl&lt;D, Req&gt; Freeze for MakeBalanceLayer&lt;D, Req&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, Req&gt; Freeze for MakeBalance&lt;S, Req&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, Req&gt; Freeze for MakeFuture&lt;F, Req&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, Req&gt; !Freeze for Balance&lt;D, Req&gt;","synthetic":true,"types":[]},{"text":"impl&lt;MS, Target, Request&gt; Freeze for PoolDiscoverer&lt;MS, Target, Request&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MS: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Target: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;MS as MakeService&lt;Target, Request&gt;&gt;::Future: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl&lt;MS, Target, Request&gt; !Freeze for Pool&lt;MS, Target, Request&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ServiceError","synthetic":true,"types":[]},{"text":"impl Freeze for Closed","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ResponseFuture&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Request&gt; Freeze for BufferLayer&lt;Request&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, Request&gt; Freeze for Buffer&lt;T, Request&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ServiceList&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as IntoIterator&gt;::IntoIter: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for Change&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, S, Request&gt; Freeze for AsyncResponseFuture&lt;P, S, Request&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as AsyncPredicate&lt;Request&gt;&gt;::Future: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Service&lt;&lt;P as AsyncPredicate&lt;Request&gt;&gt;::Request&gt;&gt;::Future: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, F&gt; Freeze for ResponseFuture&lt;R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Freeze for FilterLayer&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Freeze for AsyncFilterLayer&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for Filter&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for AsyncFilter&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, P&gt; Freeze for Hedge&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, Request&gt; Freeze for Future&lt;S, Request&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Service&lt;Request&gt;&gt;::Future: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ResponseFuture&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ConcurrencyLimitLayer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ConcurrencyLimit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RateLimitLayer","synthetic":true,"types":[]},{"text":"impl Freeze for Rate","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RateLimit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for CompleteOnResponse","synthetic":true,"types":[]},{"text":"impl&lt;F, C, H&gt; Freeze for TrackCompletionFuture&lt;F, C, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, M&gt; Freeze for Constant&lt;T, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, C&gt; Freeze for PeakEwma&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, C&gt; Freeze for PeakEwmaDiscover&lt;D, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Cost","synthetic":true,"types":[]},{"text":"impl Freeze for Handle","synthetic":true,"types":[]},{"text":"impl&lt;S, C&gt; Freeze for PendingRequests&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, C&gt; Freeze for PendingRequestsDiscover&lt;D, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Count","synthetic":true,"types":[]},{"text":"impl Freeze for Handle","synthetic":true,"types":[]},{"text":"impl Freeze for Overloaded","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for ResponseFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for LoadShedLayer","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for LoadShed&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M, Request&gt; Freeze for IntoService&lt;M, Request&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, M, Request&gt; Freeze for AsService&lt;'a, M, Request&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, S, Req&gt; !Freeze for ReadyCache&lt;K, S, Req&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Freeze for Failed&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, E&gt; Freeze for ResponseFuture&lt;F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M, Target&gt; Freeze for Reconnect&lt;M, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Target: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Service&lt;Target&gt;&gt;::Error: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Service&lt;Target&gt;&gt;::Future: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Service&lt;Target&gt;&gt;::Response: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for Budget","synthetic":true,"types":[]},{"text":"impl Freeze for Overdrawn","synthetic":true,"types":[]},{"text":"impl&lt;P, S, Request&gt; Freeze for ResponseFuture&lt;P, S, Request&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Request: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as Policy&lt;Request, &lt;S as Service&lt;Request&gt;&gt;::Response, &lt;S as Service&lt;Request&gt;&gt;::Error&gt;&gt;::Future: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Service&lt;Request&gt;&gt;::Future: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Freeze for RetryLayer&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, S&gt; Freeze for Retry&lt;P, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Request&gt; Freeze for BackgroundReady&lt;T, Request&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, E&gt; Freeze for ResponseFuture&lt;F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SpawnReadyLayer","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for MakeSpawnReady&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for MakeFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SpawnReady&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, Req&gt; Freeze for Steer&lt;S, F, Req&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Elapsed","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for ResponseFuture&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TimeoutLayer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Timeout&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for AndThen&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F1, F2, N&gt; Freeze for AndThenFuture&lt;F1, F2, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for AndThenLayer&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U, E&gt; Freeze for BoxService&lt;T, U, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U, E&gt; Freeze for UnsyncBoxService&lt;T, U, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Svc, S&gt; !Freeze for CallAll&lt;Svc, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Svc, S&gt; !Freeze for CallAllUnordered&lt;Svc, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, S&gt; Freeze for FutureService&lt;F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for MapErr&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for MapErrLayer&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, N&gt; Freeze for MapErrFuture&lt;F, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for MapRequest&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for MapRequestLayer&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for MapResponse&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for MapResponseLayer&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, N&gt; Freeze for MapResponseFuture&lt;F, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for MapResult&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for MapResultLayer&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, N&gt; Freeze for MapResultFuture&lt;F, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, Req&gt; Freeze for Oneshot&lt;S, Req&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Service&lt;Req&gt;&gt;::Future: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for None","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ResponseFuture&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Optional&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Request&gt; Freeze for ReadyOneshot&lt;T, Request&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, Request&gt; Freeze for ReadyAnd&lt;'a, T, Request&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ServiceFn&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for Then&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for ThenLayer&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F1, F2, N&gt; Freeze for ThenFuture&lt;F1, F2, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Freeze for ServiceBuilder&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tower_layer"] = [{"text":"impl Freeze for Identity","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for LayerFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Inner, Outer&gt; Freeze for Stack&lt;Inner, Outer&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Inner: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Outer: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tower_test"] = [{"text":"impl Freeze for Closed","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ResponseFuture&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Spawn&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; !Freeze for Mock&lt;T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for Handle&lt;T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendResponse&lt;T&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()